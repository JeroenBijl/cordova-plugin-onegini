/*
 * Copyright (c) 2016 Onegini B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

android {
  dexOptions {
    preDexLibraries = false
    javaMaxHeapSize "4G"
  }

  packagingOptions {
    exclude 'META-INF/ASL2.0.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
  }
}

allprojects {
  repositories {
    mavenLocal()
    mavenCentral()

    maven {
      // We must use the public (virtual) repo since the FIDO plugin dependencies are also being resolved from Artifactory but reside in a different repo
      url "https://repo.onegini.com/artifactory/public"
      credentials {
        if (project.hasProperty('artifactory_user') && project.hasProperty('artifactory_password')) {
          username artifactory_user
          password artifactory_password
        } else {
          throw new InvalidUserDataException("You must configure the 'artifactory_user' and 'artifactory_password' properties in your project before you can " +
              "build it.")
        }
      }
    }
  }
}

dependencies {
  // Onegini SDK
  compile('com.onegini.mobile.sdk.android:onegini-sdk:6.04.05-TF@aar') {
    transitive = true
  }

  // Google cloud messaging (GCM)
  compile "com.google.android.gms:play-services-gcm:9.6.1"

  // Required FIDO libraries
  compile 'com.samsung.sds.fido.uaf.sdk:fido-client:1.5.0@aar'
  compile 'org.fidoalliance.uaf.client.common:samsungsds-ccom:1.5.0@aar'
  compile 'com.samsung.sds.fido.uaf.message:samsungsds-um:1.5.0'
}

afterEvaluate {
  tasks.matching {
    it.name.startsWith('dex')
  }.each { dx ->
    if (dx.additionalParameters == null) {
      dx.additionalParameters = ['--multi-dex']
    } else {
      dx.additionalParameters += '--multi-dex'
    }
  }
}

android {
  defaultConfig {
    multiDexEnabled true
  }
}
